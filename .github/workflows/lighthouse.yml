name: Lighthouse Audit

on:
  issue_comment:
    types: [edited]

jobs:
  generate_lighthouse_audit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Add comment to PR
        id: loading_comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            Running Lighthouse audit...
      - name: Capture Vercel preview URL
        id: vercel_preview_url
        uses: aaron-binary/vercel-preview-url-action@v0.0.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: |
            ${{ steps.vercel_preview_url.outputs.vercel_preview_url }}
            https://blaketarter.com
          uploadArtifacts: true
          temporaryPublicStorage: true
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const resultOriginal = ${{ steps.lighthouse_audit.outputs.manifest }}[1].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}

            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            Object.keys(resultOriginal).forEach(key => resultOriginal[key] = formatResult(resultOriginal[key]))

            const score = res => res >= 90 ? '🟢' : res >= 50 ? '🟠' : '🔴'

            const comment = [
                `⚡️ [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score | Delta',
                '| --- | --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} | ${(result.performance - resultOriginal.performance) > 0 ? '+' : '-'}${Math.abs(result.performance - resultOriginal.performance)} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} | ${(result.accessibility - resultOriginal.accessibility) > 0 ? '+' : '-'}${Math.abs(result.accessibility - resultOriginal.accessibility)} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} | ${(result['best-practices'] - resultOriginal['best-practices']) > 0 ? '+' : '-'}${Math.abs(result['best-practices'] - resultOriginal['best-practices'])} |`,
                `| ${score(result.seo)} SEO | ${result.seo} | ${(result.seo - resultOriginal.seo) > 0 ? '+' : '-'}${Math.abs(result.seo - resultOriginal.seo)} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} | ${(result.pwa - resultOriginal.pwa) > 0 ? '+' : '-'}${Math.abs(result.pwa - resultOriginal.pwa)} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')

             core.setOutput("comment", comment); 
      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
